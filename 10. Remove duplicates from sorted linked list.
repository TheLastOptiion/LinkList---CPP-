
/* 
         @@@@@@@@@ @@    @@ @@ @@      @@ @@@@@@@ @@    @@ @@@@     @@@@@@@        @@@
         @@        @@    @@ @@ @@      @@ @@      @@@   @@ @@  @@   @@    @@      @@ @@
         @@        @@    @@ @@ @@      @@ @@      @@@@  @@ @@   @@  @@    @@     @@   @@
         @@@@@@@@@ @@@@@@@@ @@ @@      @@ @@@@@@@ @@ @@ @@ @@    @@ @@@@@@@     @@@   @@@
                @@ @@    @@ @@  @@    @@  @@      @@  @@@@ @@   @@  @@   @@    @@@@@@@@@@@
                @@ @@    @@ @@   @@  @@   @@      @@   @@@ @@  @@   @@    @@  @@         @@
         @@@@@@@@@ @@    @@ @@     @@     @@@@@@@ @@    @@ @@@@     @@     @@ @@         @@
*/
void remove_duplicates(node  *p)
{
              node *q = p;
              p = p->next;
              while( p!=NULL)
                   {
                       if( q->data == p->data)
                         {
                           q->next = p->next;
                           p=q;
                           p=p->next;
                         }
                       else
                         {
                           q=q->next;
                           p=p->next;
                         }
                   }
}

